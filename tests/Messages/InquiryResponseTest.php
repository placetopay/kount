<?php

namespace Tests\Messages;

use PlacetoPay\Kount\Constants\DecisionCodes;
use PlacetoPay\Kount\Constants\DecisionReasons;
use PlacetoPay\Kount\Entities\KountError;
use PlacetoPay\Kount\Exceptions\KountServiceException;
use PlacetoPay\Kount\Messages\InquiryResponse;
use Tests\BaseTestCase;

class InquiryResponseTest extends BaseTestCase
{
    public function testItParsesAnErrorResponse()
    {
        $this->expectException(KountServiceException::class);
        $result = $this->unserialize('czoxNToiTU9ERT1FCkVSUk89MjAxIjs=');
        new InquiryResponse($result);
    }

    public function testItParsesAnSiteErrorResponse()
    {
        $this->expectException(KountServiceException::class);
        $this->expectExceptionMessage("323 BAD_SITE Cause: [[TEST] does not exist for merchant [201000]], Field: [SITE], Value: [TEST]\n362 BAD_CART Cause: [Shopping cart type index[0] is missing], Field: [PROD_TYPE], Value: [1=>111, 2=>234]");
        $result = $this->unserialize('czo3MDE6Ik1PREU9RQpFUlJPPTMyMwpFUlJPUl8wPTMyMyBCQURfU0lURSBDYXVzZTogW1tURVNUXSBkb2VzIG5vdCBleGlzdCBmb3IgbWVyY2hhbnQgWzIwMTAwMF1dLCBGaWVsZDogW1NJVEVdLCBWYWx1ZTogW1RFU1RdCkVSUk9SXzE9MzYyIEJBRF9DQVJUIENhdXNlOiBbU2hvcHBpbmcgY2FydCB0eXBlIGluZGV4WzBdIGlzIG1pc3NpbmddLCBGaWVsZDogW1BST0RfVFlQRV0sIFZhbHVlOiBbMT0+MTExLCAyPT4yMzRdCkVSUk9SX0NPVU5UPTIKV0FSTklOR18wPTM5OSBCQURfT1BUTiBDYXVzZTogW3ZhbHVlIFsxMjNdIGRpZCBub3QgbWF0Y2ggcmVnZXggL14oW01OWF0/KT8kL10sIEZpZWxkOiBbQ1ZWUl0sIFZhbHVlOiBbMTIzXQpXQVJOSU5HXzE9Mzk5IEJBRF9PUFROIEZpZWxkOiBbVURGXSwgVmFsdWU6IFtrZXlfMT0+U29tZSBWYWx1ZSAxLCBrZXlfMj0+U29tZSBWYWx1ZSAyLCBrZXlfMz0+U29tZSBWYWx1ZSAzXQpXQVJOSU5HXzI9Mzk5IEJBRF9PUFROIEZpZWxkOiBbVURGXSwgVmFsdWU6IFtUaGUgbGFiZWwgW2tleV8xXSBpcyBub3QgZGVmaW5lZCBmb3IgbWVyY2hhbnQgSUQgWzIwMTAwMF0uIFRoZSBsYWJlbCBba2V5XzJdIGlzIG5vdCBkZWZpbmVkIGZvciBtZXJjaGFudCBJRCBbMjAxMDAwXS4gVGhlIGxhYmVsIFtrZXlfM10gaXMgbm90IGRlZmluZWQgZm9yIG1lcmNoYW50IElEIFsyMDEwMDBdLl0KV0FSTklOR19DT1VOVD0zIjs=');

        $errorsResponse = (new InquiryResponse($result))->errors;

        $this->assertTrue($errorsResponse->isErrorResponse());
        $this->assertEquals('323', $errorsResponse->code());
        $this->assertEquals(KountError::errorKey('323'), $errorsResponse->key());
        $this->assertEquals(2, $errorsResponse->count());
        $this->assertEquals([
            '323 BAD_SITE Cause: [[TEST] does not exist for merchant [201000]], Field: [SITE], Value: [TEST]',
            '362 BAD_CART Cause: [Shopping cart type index[0] is missing], Field: [PROD_TYPE], Value: [1=>111, 2=>234]',
        ], $errorsResponse->errors());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesASuccesfulInquiryResponse()
    {
        $result = $this->unserialize('czoxMTQwOiJWRVJTPTA2MzAKTU9ERT1RClRSQU49UDA2WjA4UkMzS0wzCk1FUkM9MjAxMDAwClNFU1M9MQpPUkRSPTEKQVVUTz1EClNDT1I9MzgKR0VPWD1VUwpCUk5EPVZJU0EKUkVHTj0KTkVUVz1BCktBUFQ9TgpDQVJEUz0xCkRFVklDRVM9MQpFTUFJTFM9MQpWRUxPPTAKVk1BWD0wClNJVEU9REVGQVVMVApERVZJQ0VfTEFZRVJTPS4uLi4KRklOR0VSUFJJTlQ9ClRJTUVaT05FPQpMT0NBTFRJTUU9IApSRUdJT049CkNPVU5UUlk9ClBST1hZPQpKQVZBU0NSSVBUPQpGTEFTSD0KQ09PS0lFUz0KSFRUUF9DT1VOVFJZPQpMQU5HVUFHRT0KTU9CSUxFX0RFVklDRT0KTU9CSUxFX1RZUEU9Ck1PQklMRV9GT1JXQVJERVI9ClZPSUNFX0RFVklDRT0KUENfUkVNT1RFPQpSVUxFU19UUklHR0VSRUQ9NQpSVUxFX0lEXzA9NzI5ODMyClJVTEVfREVTQ1JJUFRJT05fMD1CaWxsaW5nIENvdW50cnkgaXMgbm90IEJJTiBDb3VudHJ5ClJVTEVfSURfMT03Mjk4NDgKUlVMRV9ERVNDUklQVElPTl8xPURldmljZSBEYXRhIENvbGxlY3RvciBNaXNzaW5nICYgU2NvcmUgPiAzNQpSVUxFX0lEXzI9NzI5ODUyClJVTEVfREVTQ1JJUFRJT05fMj1EZWNsaW5lIE5ldHdvcmsgQ2hhcmdlYmFja3MgPjEKUlVMRV9JRF8zPTcyOTg1NApSVUxFX0RFU0NSSVBUSU9OXzM9UmV2aWV3IE5vbi1Ob3JtYWwgTmV0d29yayBUeXBlClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTAKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9CkRTUj0KVUFTPQpCUk9XU0VSPQpPUz0KUElQX0lQQUQ9ClBJUF9MQVQ9ClBJUF9MT049ClBJUF9DT1VOVFJZPQpQSVBfUkVHSU9OPQpQSVBfQ0lUWT0KUElQX09SRz0KSVBfSVBBRD0KSVBfTEFUPQpJUF9MT049CklQX0NPVU5UUlk9CklQX1JFR0lPTj0KSVBfQ0lUWT0KSVBfT1JHPQpXQVJOSU5HXzA9Mzk5IEJBRF9PUFROIEZpZWxkOiBbVURGXSwgVmFsdWU6IFtrZXlfMT0+U29tZSBWYWx1ZSAxXQpXQVJOSU5HXzE9Mzk5IEJBRF9PUFROIEZpZWxkOiBbVURGXSwgVmFsdWU6IFtUaGUgbGFiZWwgW2tleV8xXSBpcyBub3QgZGVmaW5lZCBmb3IgbWVyY2hhbnQgSUQgWzIwMTAwMF0uXQpXQVJOSU5HX0NPVU5UPTIiOw==');

        $response = new InquiryResponse($result);

        $this->assertFalse($response->errors->isErrorResponse());
        $this->assertNull($response->errors->code());
        $this->assertNull($response->errors->key());
        $this->assertEquals(0, $response->errors->count());
        $this->assertEmpty($response->errors->errors());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponse()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals(33, $response->score());
        $this->assertEquals(67, $response->omniscore());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithSystemInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals('0720', $response->system->version());
        $this->assertEquals('Q', $response->system->mode());
        $this->assertEquals('201000', $response->system->merchantId());
        $this->assertEquals('3', $response->system->sessionId());
        $this->assertEquals('1234', $response->system->orderReference());
        $this->assertEquals([
            'version' => '0720',
            'mode' => 'Q',
            'merchantId' => '201000',
            'sessonId' => '3',
            'orderReference' => '1234',
        ], $response->system->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithDecisionInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals(DecisionCodes::DECLINE, $response->decision->code());
        $this->assertEquals(DecisionReasons::DECLINE, $response->decision->description());
        $this->assertFalse($response->decision->shouldApprove());
        $this->assertTrue($response->decision->shouldDecline());
        $this->assertFalse($response->decision->shouldReview());
        $this->assertEquals([
            'code' => DecisionCodes::DECLINE,
            'description' => DecisionReasons::DECLINE,
            'shouldApprove' => false,
            'shouldDecline' => true,
            'shouldReview' => false,
        ], $response->decision->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithVerificationInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals('US', $response->verification->geolocationCountry());
        $this->assertEquals('', $response->verification->geolocationRegion());
        $this->assertEquals('VISA', $response->verification->cardBrand());
        $this->assertFalse($response->verification->cardIsBlacklisted());
        $this->assertTrue($response->verification->aCatchVerificationHasBeenPerformed());
        $this->assertEquals('', $response->verification->threeDsMerchantResponse());
        $this->assertEquals('', $response->verification->denialReasonCode());
        $this->assertEquals([
            'geolocationCountry' => 'US',
            'geolocationRegion' => '',
            'cardBrand' => 'VISA',
            'cardIsBlacklisted' => false,
            'aCatchVerificationHasBeenPerformed' => true,
            'threeDsMerchantResponse' => '',
            'denialReasonCode' => '',
        ], $response->verification->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithIpInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals('181.128.85.221', $response->ip->address());
        $this->assertEquals('6.2518', $response->ip->latitude());
        $this->assertEquals('-75.5636', $response->ip->longitude());
        $this->assertEquals('CO', $response->ip->country());
        $this->assertEquals('Antioquia', $response->ip->state());
        $this->assertEquals('Medellín', $response->ip->city());
        $this->assertEquals('UNE', $response->ip->provider());
        $this->assertEquals([
            'address' => '181.128.85.221',
            'latitude' => '6.2518',
            'longitude' => '-75.5636',
            'country' => 'CO',
            'state' => 'Antioquia',
            'city' => 'Medellín',
            'provider' => 'UNE',
        ], $response->ip->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithTransactionInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals('P01J0KZN329Z', $response->transaction->id());
        $this->assertEquals(1, $response->transaction->usedCardsCount());
        $this->assertEquals(1, $response->transaction->usedDevicesCount());
        $this->assertEquals(
            '81BBF7770C..D92909FF92.1867A9B2CB.D6112C09F7',
            $response->transaction->deviceLayers()
        );
        $this->assertEquals(1, $response->transaction->usedEmailsCount());
        $this->assertEquals(0, $response->transaction->velocity());
        $this->assertEquals(0, $response->transaction->maxAllowedVelocity());
        $this->assertEquals('DEFAULT', $response->transaction->site());
        $this->assertEquals('4C2410BA22A64E21BF0C73EA88E48D7E', $response->transaction->fingerprint());
        $this->assertEquals('300', $response->transaction->timezone());
        $this->assertEquals('2017-05-31 00:19', $response->transaction->localtime());
        $this->assertEquals('CO_02', $response->transaction->region());
        $this->assertEquals('CO', $response->transaction->country());
        $this->assertEquals('US', $response->transaction->httpCountry());
        $this->assertFalse($response->transaction->hasProxy());
        $this->assertTrue($response->transaction->hasJavascript());
        $this->assertFalse($response->transaction->hasFlash());
        $this->assertTrue($response->transaction->hasCookies());
        $this->assertEquals('en', $response->transaction->language());
        $this->assertFalse($response->transaction->processedFromMobileDevice());
        $this->assertEquals('', $response->transaction->mobileType());
        $this->assertFalse($response->transaction->mobileIsThroughMobileForwarder());
        $this->assertFalse($response->transaction->processedFromVoiceDevice());
        $this->assertFalse($response->transaction->processedFromRemotePC());
        $this->assertEquals([
            'id' => 'P01J0KZN329Z',
            'usedCardsCount' => 1,
            'usedDevicesCount' => 1,
            'deviceLayers' => '81BBF7770C..D92909FF92.1867A9B2CB.D6112C09F7',
            'usedEmailsCount' => 1,
            'velocity' => 0,
            'maxAllowedVelocity' => 0,
            'site' => 'DEFAULT',
            'fingerprint' => '4C2410BA22A64E21BF0C73EA88E48D7E',
            'timezone' => '300',
            'localtime' => '2017-05-31 00:19',
            'region' => 'CO_02',
            'country' => 'CO',
            'httpCountry' => 'US',
            'hasProxy' => false,
            'hasJavascript' => true,
            'hasFlash' => false,
            'hasCookies' => true,
            'language' => 'en',
            'processedFromMobileDevice' => false,
            'mobileType' => '',
            'mobileIsThroughMobileForwarder' => false,
            'processedFromVoiceDevice' => false,
            'processedFromRemotePC' => false,
        ], $response->transaction->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithAdditionalInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals('2017-05-30', $response->additional->dateSinceFirstMadeTransaction());
        $this->assertEquals('768x1366', $response->additional->screenResolution());
        $this->assertEquals(
            'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
            $response->additional->userAgent()
        );
        $this->assertEquals('Linux', $response->additional->operativeSystem());
        $this->assertEquals('Chrome 58.0.3029.110', $response->additional->browser());
        $this->assertFalse($response->additional->wasPreviouslyWhitelisted());
        $this->assertEquals([
            'dateSinceFirstMadeTransaction' => '2017-05-30',
            'screenResolution' => '768x1366',
            'userAgent' => 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
            'operativeSystem' => 'Linux',
            'browser' => 'Chrome 58.0.3029.110',
            'wasPreviouslyWhitelisted' => false,
        ], $response->additional->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithTriggeredRulesInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals(5, $response->triggeredRules->count());
        $this->assertEquals([
            '729832' => 'Billing Country is not BIN Country',
            '729852' => 'Decline Network Chargebacks >1',
            '729854' => 'Review Non-Normal Network Type',
            '729858' => 'Device Location Lower Risk Review Countries',
            '729872' => 'Card on Network Chargeback List >0',
        ], $response->triggeredRules->rules());
        $this->assertEquals([
            '729832' => 'Billing Country is not BIN Country',
            '729852' => 'Decline Network Chargebacks >1',
            '729854' => 'Review Non-Normal Network Type',
            '729858' => 'Device Location Lower Risk Review Countries',
            '729872' => 'Card on Network Chargeback List >0',
        ], $response->triggeredRules->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithTriggeredCountersInformation()
    {
        $result = $this->unserialize('czoxNTI3OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9TgpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MQpDT1VOVEVSX05BTUVfMT1ISVNUT1JJQ09ORUdBVElWTwpDT1VOVEVSX1ZBTFVFXzE9MQpSRUFTT05fQ09ERT0KTUFTVEVSQ0FSRD0KRERGUz0yMDE3LTA1LTMwCkRTUj03Njh4MTM2NgpVQVM9TW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjExMCBTYWZhcmkvNTM3LjM2CkJST1dTRVI9Q2hyb21lIDU4LjAuMzAyOS4xMTAKT1M9TGludXgKUElQX0lQQUQ9ClBJUF9MQVQ9ClBJUF9MT049ClBJUF9DT1VOVFJZPQpQSVBfUkVHSU9OPQpQSVBfQ0lUWT0KUElQX09SRz0KSVBfSVBBRD0xODEuMTI4Ljg1LjIyMQpJUF9MQVQ9Ni4yNTE4CklQX0xPTj0tNzUuNTYzNgpJUF9DT1VOVFJZPUNPCklQX1JFR0lPTj1BbnRpb3F1aWEKSVBfQ0lUWT1NZWRlbGzDrW4KSVBfT1JHPVVORQpUSFJFRV9EU19NRVJDSEFOVF9SRVNQT05TRT0KV0FSTklOR19DT1VOVD0yCldBUk5JTkdfMD1USElTIElTIFRIRSBGSVJTVCBXQVJOSU5HCldBUk5JTkdfMT1USElTIElTIFRIRSBTRUNPTkQgV0FSTklORwpQUkVWSU9VU0xZX1dISVRFTElTVEVEPU4iOw==');
        $response = new InquiryResponse($result);

        $this->assertEquals(2, $response->triggeredCounters->count());
        $this->assertEquals([
            'CONTRACARGOSREPORTADOS' => '1',
            'HISTORICONEGATIVO' => '1',
        ], $response->triggeredCounters->counters());
        $this->assertEquals([
            'CONTRACARGOSREPORTADOS' => '1',
            'HISTORICONEGATIVO' => '1',
        ], $response->triggeredCounters->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItParsesACorrectDataCollectedInquiryResponseWithWarningsInformation()
    {
        $result = $this->unserialize('czoxNTI4OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9QQpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MSwKQ09VTlRFUl9OQU1FXzE9SElTVE9SSUNPTkVHQVRJVk8KQ09VTlRFUl9WQUxVRV8xPTEKUkVBU09OX0NPREU9Ck1BU1RFUkNBUkQ9CkRERlM9MjAxNy0wNS0zMApEU1I9NzY4eDEzNjYKVUFTPU1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzU4LjAuMzAyOS4xMTAgU2FmYXJpLzUzNy4zNgpCUk9XU0VSPUNocm9tZSA1OC4wLjMwMjkuMTEwCk9TPUxpbnV4ClBJUF9JUEFEPQpQSVBfTEFUPQpQSVBfTE9OPQpQSVBfQ09VTlRSWT0KUElQX1JFR0lPTj0KUElQX0NJVFk9ClBJUF9PUkc9CklQX0lQQUQ9MTgxLjEyOC44NS4yMjEKSVBfTEFUPTYuMjUxOApJUF9MT049LTc1LjU2MzYKSVBfQ09VTlRSWT1DTwpJUF9SRUdJT049QW50aW9xdWlhCklQX0NJVFk9TWVkZWxsw61uCklQX09SRz1VTkUKVEhSRUVfRFNfTUVSQ0hBTlRfUkVTUE9OU0U9CldBUk5JTkdfQ09VTlQ9MgpXQVJOSU5HXzA9VEhJUyBJUyBUSEUgRklSU1QgV0FSTklORwpXQVJOSU5HXzE9VEhJUyBJUyBUSEUgU0VDT05EIFdBUk5JTkcKUFJFVklPVVNMWV9XSElURUxJU1RFRD1OIjs=');
        $response = new InquiryResponse($result);

        $this->assertEquals(2, $response->warnings->count());
        $this->assertEquals([
            'THIS IS THE FIRST WARNING',
            'THIS IS THE SECOND WARNING',
        ], $response->warnings->warnings());
        $this->assertEquals([
            'THIS IS THE FIRST WARNING',
            'THIS IS THE SECOND WARNING',
        ], $response->warnings->toArray());
    }

    /**
     * @throws KountServiceException
     */
    public function testItReturnsAFullParsedResponseSuccessfully()
    {
        $result = $this->unserialize('czoxNTI3OiJWRVJTPTA3MjAKTU9ERT1RClRSQU49UDAxSjBLWk4zMjlaCk1FUkM9MjAxMDAwClNFU1M9MwpPUkRSPTEyMzQKQVVUTz1EClNDT1I9MzMKT01OSVNDT1JFPTY3CkdFT1g9VVMKQlJORD1WSVNBClJFR049Ck5FVFc9TgpLQVBUPVkKQ0FSRFM9MQpERVZJQ0VTPTEKRU1BSUxTPTEKVkVMTz0wClZNQVg9MApTSVRFPURFRkFVTFQKREVWSUNFX0xBWUVSUz04MUJCRjc3NzBDLi5EOTI5MDlGRjkyLjE4NjdBOUIyQ0IuRDYxMTJDMDlGNwpGSU5HRVJQUklOVD00QzI0MTBCQTIyQTY0RTIxQkYwQzczRUE4OEU0OEQ3RQpUSU1FWk9ORT0zMDAKTE9DQUxUSU1FPTIwMTctMDUtMzEgMDA6MTkKUkVHSU9OPUNPXzAyCkNPVU5UUlk9Q08KUFJPWFk9TgpKQVZBU0NSSVBUPVkKRkxBU0g9TgpDT09LSUVTPVkKSFRUUF9DT1VOVFJZPVVTCkxBTkdVQUdFPUVOCk1PQklMRV9ERVZJQ0U9TgpNT0JJTEVfVFlQRT0KTU9CSUxFX0ZPUldBUkRFUj1OClZPSUNFX0RFVklDRT1OClBDX1JFTU9URT1OClJVTEVTX1RSSUdHRVJFRD01ClJVTEVfSURfMD03Mjk4MzIKUlVMRV9ERVNDUklQVElPTl8wPUJpbGxpbmcgQ291bnRyeSBpcyBub3QgQklOIENvdW50cnkKUlVMRV9JRF8xPTcyOTg1MgpSVUxFX0RFU0NSSVBUSU9OXzE9RGVjbGluZSBOZXR3b3JrIENoYXJnZWJhY2tzID4xClJVTEVfSURfMj03Mjk4NTQKUlVMRV9ERVNDUklQVElPTl8yPVJldmlldyBOb24tTm9ybWFsIE5ldHdvcmsgVHlwZQpSVUxFX0lEXzM9NzI5ODU4ClJVTEVfREVTQ1JJUFRJT05fMz1EZXZpY2UgTG9jYXRpb24gTG93ZXIgUmlzayBSZXZpZXcgQ291bnRyaWVzClJVTEVfSURfND03Mjk4NzIKUlVMRV9ERVNDUklQVElPTl80PUNhcmQgb24gTmV0d29yayBDaGFyZ2ViYWNrIExpc3QgPjAKQ09VTlRFUlNfVFJJR0dFUkVEPTIKQ09VTlRFUl9OQU1FXzA9Q09OVFJBQ0FSR09TUkVQT1JUQURPUwpDT1VOVEVSX1ZBTFVFXzA9MQpDT1VOVEVSX05BTUVfMT1ISVNUT1JJQ09ORUdBVElWTwpDT1VOVEVSX1ZBTFVFXzE9MQpSRUFTT05fQ09ERT0KTUFTVEVSQ0FSRD0KRERGUz0yMDE3LTA1LTMwCkRTUj03Njh4MTM2NgpVQVM9TW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjExMCBTYWZhcmkvNTM3LjM2CkJST1dTRVI9Q2hyb21lIDU4LjAuMzAyOS4xMTAKT1M9TGludXgKUElQX0lQQUQ9ClBJUF9MQVQ9ClBJUF9MT049ClBJUF9DT1VOVFJZPQpQSVBfUkVHSU9OPQpQSVBfQ0lUWT0KUElQX09SRz0KSVBfSVBBRD0xODEuMTI4Ljg1LjIyMQpJUF9MQVQ9Ni4yNTE4CklQX0xPTj0tNzUuNTYzNgpJUF9DT1VOVFJZPUNPCklQX1JFR0lPTj1BbnRpb3F1aWEKSVBfQ0lUWT1NZWRlbGzDrW4KSVBfT1JHPVVORQpUSFJFRV9EU19NRVJDSEFOVF9SRVNQT05TRT0KV0FSTklOR19DT1VOVD0yCldBUk5JTkdfMD1USElTIElTIFRIRSBGSVJTVCBXQVJOSU5HCldBUk5JTkdfMT1USElTIElTIFRIRSBTRUNPTkQgV0FSTklORwpQUkVWSU9VU0xZX1dISVRFTElTVEVEPU4iOw==');

        $response = new InquiryResponse($result);

        $this->assertEquals([
            'score' => 33,
            'omniscore' => 67,
            'system' => [
                'version' => '0720',
                'mode' => 'Q',
                'merchantId' => '201000',
                'sessonId' => '3',
                'orderReference' => '1234',
            ],
            'decision' => [
                'code' => DecisionCodes::DECLINE,
                'description' => DecisionReasons::DECLINE,
                'shouldApprove' => false,
                'shouldDecline' => true,
                'shouldReview' => false,
            ],
            'verification' => [
                'geolocationCountry' => 'US',
                'geolocationRegion' => '',
                'cardBrand' => 'VISA',
                'cardIsBlacklisted' => false,
                'aCatchVerificationHasBeenPerformed' => true,
                'threeDsMerchantResponse' => '',
                'denialReasonCode' => '',
            ],
            'ip' => [
                'address' => '181.128.85.221',
                'latitude' => '6.2518',
                'longitude' => '-75.5636',
                'country' => 'CO',
                'state' => 'Antioquia',
                'city' => 'Medellín',
                'provider' => 'UNE',
            ],
            'transaction' => [
                'id' => 'P01J0KZN329Z',
                'usedCardsCount' => 1,
                'usedDevicesCount' => 1,
                'deviceLayers' => '81BBF7770C..D92909FF92.1867A9B2CB.D6112C09F7',
                'usedEmailsCount' => 1,
                'velocity' => 0,
                'maxAllowedVelocity' => 0,
                'site' => 'DEFAULT',
                'fingerprint' => '4C2410BA22A64E21BF0C73EA88E48D7E',
                'timezone' => '300',
                'localtime' => '2017-05-31 00:19',
                'region' => 'CO_02',
                'country' => 'CO',
                'httpCountry' => 'US',
                'hasProxy' => false,
                'hasJavascript' => true,
                'hasFlash' => false,
                'hasCookies' => true,
                'language' => 'en',
                'processedFromMobileDevice' => false,
                'mobileType' => '',
                'mobileIsThroughMobileForwarder' => false,
                'processedFromVoiceDevice' => false,
                'processedFromRemotePC' => false,
            ],
            'additional' => [
                'dateSinceFirstMadeTransaction' => '2017-05-30',
                'screenResolution' => '768x1366',
                'userAgent' => 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',
                'operativeSystem' => 'Linux',
                'browser' => 'Chrome 58.0.3029.110',
                'wasPreviouslyWhitelisted' => false,
            ],
            'triggeredRules' =>  [
                '729832' => 'Billing Country is not BIN Country',
                '729852' => 'Decline Network Chargebacks >1',
                '729854' => 'Review Non-Normal Network Type',
                '729858' => 'Device Location Lower Risk Review Countries',
                '729872' => 'Card on Network Chargeback List >0',
            ],
            'triggeredCounters' => [
                'CONTRACARGOSREPORTADOS' => '1',
                'HISTORICONEGATIVO' => '1',
            ],
            'warnings' => [
                'THIS IS THE FIRST WARNING',
                'THIS IS THE SECOND WARNING',
            ],
            'errorsBag' => [
                'isErrorResponse' => false,
                'code' => null,
                'key' => null,
                'errors' => [],
            ],
        ], $response->toArray());
    }
}
